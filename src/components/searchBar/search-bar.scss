@use "../../styles/typography" as typo;
@import "../../styles/_index";

.search-div {
    display: flex;
    align-items: center;
    width: 100%;
    border-radius: $sd-border-radius-circle;
    @include base-sd-border($color: currentColor);
    height: 3rem;
    transition: background ease-out 0.2s;
    &:hover {
        background: state-color-overlay($sd-color-primary, "hover");
    }
}

.search-div:has(input:focus) {
    background: state-color-overlay($sd-color-primary, "focus");
}

.search-div:has(input:active) {
    background: state-color-overlay($sd-color-primary, "press");
}

input {
    border: none;
    outline: none;
    color: inherit;
    background: rgba(0, 0, 0, 0);
    @include typo.sd-body();
}

input::placeholder {
    @include typo.sd-body();
    color: inherit;
    opacity: $sd-opacity-placeholder;
}

.search-div .icon {
    padding: $sd-space-075;
}

#search-icon {
    margin-left: -1 * $sd-space-012;
}

.search-div input[type="search"] {
    width: 100%;
    margin-right: $sd-space-075;
}

input:-webkit-autofill {
    -webkit-background-clip: text;
}

input::-webkit-search-cancel-button {
    display: none;
}

#close-button {
    cursor: pointer;
    display: none;
}

//small size
.search-div.small {
    height: 2.5rem;
    & sd-icon {
        padding: $sd-space-050;
    }
}

.search-div.invert {
    @include base-sd-border($sd-color-surface);
    color: $sd-color-surface;
    & input {
        color: $sd-color-surface;
    }
    &:hover {
        background: state-color-overlay($sd-color-surface, "hover");
    }
    &:has(input:focus) {
        background: state-color-overlay($sd-color-surface, "focus");
    }
    &:has(input:active) {
        background: state-color-overlay($sd-color-surface, "press");
    }
    & input::placeholder {
        color: $sd-color-surface;
        opacity: 0.38;
    }
}
